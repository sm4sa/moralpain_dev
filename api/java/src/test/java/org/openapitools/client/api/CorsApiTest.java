/*
 * MoralDistress API
 * MoralDistress API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CorsApi
 */
@Ignore
public class CorsApiTest {

    private final CorsApi api = new CorsApi();

    /**
     * CORS admin analytics support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsAdminAnalyticsTest() throws ApiException {
        api.optionsAdminAnalytics();

        // TODO: test validations
    }
    /**
     * CORS admin submissions support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsAdminSubmissionsTest() throws ApiException {
        api.optionsAdminSubmissions();

        // TODO: test validations
    }
    /**
     * CORS submission support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsSubmissionTest() throws ApiException {
        api.optionsSubmission();

        // TODO: test validations
    }
    /**
     * CORS submission support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsSubmissionTypeDBTest() throws ApiException {
        api.optionsSubmissionTypeDB();

        // TODO: test validations
    }
    /**
     * CORS survey support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsSurveyTest() throws ApiException {
        api.optionsSurvey();

        // TODO: test validations
    }
    /**
     * CORS resiliency resources support
     *
     * Enable CORS by returning correct headers 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void optionsVisitedResiliencyResourcesTest() throws ApiException {
        api.optionsVisitedResiliencyResources();

        // TODO: test validations
    }
}
